*** Вопросы к исследованию ***
Сравнить стратегии TFT, aTFT, fTFT, tTFT (с разными параметрами). 
Сравнить стратегии, когда K2 < K1.
Сравнить стратегии на разных уровнях зашумлённости (ошибки в сигнале).
Сравнить стратегии на разных продолжительностях игры L.
Проследить популяцию стратегий при естественном отборе (худшие 5 выбывают, лучшие 5 клонируюся - турнир повторяется)




*** Функциональные требования ***


Установка параметров
  Страница параметров турнира
    Параметры по умолчанию
    Загрузка параметров из файла
  Страница параметров отбора
    Параметры по умолчанию
    Загрузка параметров из файла


Вывод результатов
    Показывать бары - очки
  Показывать график популяции


Механика
  Реализовать цикл турниров
    Запись в БД


Системные функции / администрирование
  Очистка таблиц от данных старше ...


Баги
  Проверить корректность Копирующий с прощением
  Откуда идут странные запросы:
    select distinct t.id from d_tournament t where t.id=
    select distinct t.id from d_player_in_tournament t where t.id=
    select distinct t.id from d_game t where t.id=
  Стратегия random(0) отображается в результатах без параметра


Изменения 2020-01-24
?  Модель dataset:  Save(параметр) - одну, множество, все/null   - зачем??
  Контроллер tour
    Все данные - сделать dataset
    Добавить метод run_sequence(tourNum)


 - сделать страницу "параметры отбора": текстовое поле, несколько кнопок с типовыми параметрами
 - формат поля:
   - параметры турнира (цены-результаты-шумы-число ходов)
   - параметры эволюции (количество выбывающих-прибывающих, размер мутаций, критерий остановки)
   - параметры игроков ( N x стратегия(параметры) )



 - сделать реализацию эволюция:

   - таблица

   - туры выполняются во view

   - разные стратегии - разными цветами

   - параметры стратегии - оттенки цвета

   - остановка по критерию


 - в стратегии добавить getState() - возвращает json состояния игрока

 - если gm_save=true - получать состояния обоих игроков, записывать в ход (в БД)



---------------------------------------------------------------

Done:

+ Структуры данных
+   Ход  (id игры, номер хода, решение игрока 1, решение игрока 2)
+   Игра (id турнира, дата-время начала, номер игрока 1, номер игрока 2, стратегия игрока 1, стратегия игрока 2, результат игрока 1, результат игрока 2)
+   Игрок-в-турнире (id турнира, номер игрока, результат)
+   Турнир (длина игры, цена 1-2, выгода 1-2, шум)


Вывод результатов
+  Показывать результат турнира


Механика
+  Реализовать стратегии
+  Реализовать ход
+    Запись в БД
+  Реализовать игру
+    Запись в БД
+  Реализовать турнир
+    Запись в БД
+  Ходы - записывать все вместе


+ Улучшить производительность
+  Профилировать
+  Отследить узкие места
+  Исправить производительность


+ Фреймворк
+  Найти FSB
+  Модель - разделить на dataset и datarecord
+  Save/Load - вынести в базовую модель


+Положить в git
+  Весь проект
+  Фреймфорк FSB


Изменения 2020-01-24
+  Модели
+    Отслеживать изменившиеся поля
+    Сохранять только изменения; при отсуствии - не писать в БД


Изменения 2020-01-28
+ Выделить интерфейсы:
+  Data record
+  Data set
+  Saveable

+ В конструкторе dataset / datarecord указывать mode: raw (без проверок, без сохранений) / trusted (с проверками, с сохранениями)
+ На странице параметров: сохранять ходы, сохранять игры (да, нет)
+ В контроллере tour указывать параметры для modMove и modGame
+ Интерфейс Saveable для raw: ничего не делать, возвращать false


Изменения 2020-10-29
+  В базовую стратегию добавить zero_move
+  В common стратегии сделать два варианта: ходы - в dataset и ходы - в простом массиве
+  Сравнить производительность


 + сделать файл jpeg.php, с параметром rgb=hex, который выводит один пиксель

 + в результатах тура выводить полоску



